import React, {Component} from 'react';

export default function HocReactMemo(WrappedComponent, data){
    return class extends Component{
        constructor(props) {
            super(props);
            this.state = {
                data: data
            };
        }
        shouldComponentUpdate(nextProps) {
            let shouldUpdate = false;
            if (nextProps.value !== this.props.value) {
                shouldUpdate = true;
            }
            return shouldUpdate;
        }
        
        render(){
            return (
                <WrappedComponent data={this.state.data} {...this.props} />
            );
        }
    } 
}

File which would use should be like below

import React, { Component } from "react";
import HOCReactMemo from './HocReactMemo';
  
class Counter1 extends Component {
  render() {
    console.log("Counter 1 is calling");
    return (
        <div>
          <h2>Counter 1:</h2>
          <h3>{this.props.value}</h3>
          <button onClick={this.props.onClick}>Add</button>
        </div>
    );
  }
}
  
export default Counter1 = HOCReactMemo(
  Counter1,
  (DataSource) => DataSource.getComments()
);
